---
interface BreadcrumbItem {
  label: string;
  href: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav aria-label="breadcrumb" class="mb-6 flex w-full items-center">
  <ol class="flex flex-wrap items-center gap-1.5 break-words text-text-primary sm:gap-2">
    {items.map((item, index) => (
      <>
        <li class="inline-flex items-center gap-1.5">
          <a class="hover:text-dodger-DEFAULT transition-colors" href={item.href}>
            {item.label}
          </a>
        </li>
        {index < items.length - 1 && (
          <li
            role="presentation"
            aria-hidden="true"
            class="text-text-primary [&>svg]:size-4"
          >
            <svg
              stroke="currentColor"
              fill="none"
              stroke-width="0"
              viewBox="0 0 15 15"
              height="1em"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z"
                fill="currentColor"
              ></path>
            </svg>
          </li>
        )}
      </>
    ))}
  </ol>
</nav> 